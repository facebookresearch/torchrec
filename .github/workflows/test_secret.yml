# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push, pull_request]
jobs:

  build_gpu:
    runs-on: linux.8xlarge.nvidia.gpu
    steps:
    - name: check cpu info
      shell: bash
      run: |
        cat /proc/cpuinfo
    - name: check distribution info
      shell: bash
      run: |
        cat /proc/version
    - name: Display EC2 information
      shell: bash
      run: |
        set -euo pipefail
        function get_ec2_metadata() {
          # Pulled from instance metadata endpoint for EC2
          # see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html
          category=$1
          curl -fsSL "http://169.254.169.254/latest/meta-data/${category}"
        }
        echo "ami-id: $(get_ec2_metadata ami-id)"
        echo "instance-id: $(get_ec2_metadata instance-id)"
        echo "instance-type: $(get_ec2_metadata instance-type)"
    - name: check gpu info
      shell: bash
      run: |
        sudo yum install lshw -y
        sudo lshw -C display
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    # Update references
    - name: Git Sumbodule Update
      run: |
        git submodule init
        git submodule update --remote --recursive
        cd third_party/fbgemm/
        git submodule sync
        git submodule update --init --recursive
        git log

    - name: Check the secret env work
      env:
          PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        if [ -z "$PYPI_TOKEN" ]; then
          echo "must specify PYPI_TOKEN"
        exit 1
        fi
        echo "$PYPI_TOKEN"
