# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit Test CI

on:
  # TODO: re-enable when GPU unit tests are working
  # push:
  #   paths-ignore:
  #     - "docs/*"
  #     - "third_party/*"
  #     - .gitignore
  #     - "*.md"
  # pull_request:
  #   paths-ignore:
  #     - "docs/*"
  #     - "third_party/*"
  #     - .gitignore
  #     - "*.md"
  workflow_dispatch:

jobs:
  build_on_cpu:
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    strategy:
      matrix:
        include:
         - runner: linux.2xlarge
          # ideally we run on 3.8 and 3.9 as well, however we are limited in resources.
           python-version: 3.7
           python-tag: "py37"
           cuda-version: "11.7"
    with:
      runner: ${{ matrix.runner }}
      timeout: 60
      gpu-arch-type: cuda
      gpu-arch-version: "${{ matrix.cuda-version }}"
      upload-artifact: torchrec-test_${{ matrix.python-version }}_${{ matrix.cuda-version }}.whl
      script: |
        set -x

        # TODO: Re-write this as a single bash script
        ldd --version
        conda create --name build_binary python=${{ matrix.python-version }}
        conda info
        conda install -n build_binary -y pytorch pytorch-cuda=11.7 -c pytorch-nightly -c nvidia
        conda install -n build_binary -y cudnn
        conda run -n build_binary python -m pip install -r requirements.txt

        conda run -n build_binary python -c "import torch.distributed"
        echo "torch.distributed succeeded"
        conda run -n build_binary python -c "import skbuild"
        echo "skbuild succeeded"
        conda run -n build_binary python -c "import numpy"
        echo "numpy succeeded"
        conda run -n build_binary \
          python setup.py bdist_wheel \
          --package_name torchrec-test \
          --python-tag=${{ matrix.python-tag }}

        mv dist/torchrec-test-*.whl "${RUNNER_ARTIFACT_DIR}/"

  test_on_gpu:
    needs: build_on_cpu
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    strategy:
      matrix:
        include:
         - runner: linux.4xlarge.nvidia.gpu
          # ideally we run on 3.8 and 3.9 as well, however we are limited in resources.
           python-version: 3.7
           python-tag: "py37"
           cuda-version: "11.7"
    with:
      runner: ${{ matrix.runner }}
      timeout: 60
      gpu-arch-type: cuda
      gpu-arch-version: "${{ matrix.cuda_version }}"
      download-artifact: torchrec-test_${{ matrix.python-version }}_${{ matrix.cuda-tag }}.whl
      script: |
        set -x

        # TODO: Re-write this as a single bash script
        ldd --version
        conda create --name build_binary python=${{ matrix.python-version }}
        conda info
        conda install -n build_binary -y pytorch pytorch-cuda=11.7 -c pytorch-nightly -c nvidia
        conda install -n build_binary -y cudnn

        # Install torchrec binary
        conda run -n build_binary python -m pip install "${RUNNER_ARTIFACT_DIR}/*.whl"

        conda run -n build_binary \
          python -m pip install pytest
        conda run -n build_binary \
          python -m pytest torchrec -v -s -W ignore::pytest.PytestCollectionWarning --continue-on-collection-errors
