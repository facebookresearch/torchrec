# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit Test CI

on:
  push:
    paths-ignore:
      - "docs/*"
      - "third_party/*"
      - .gitignore
      - "*.md"
  pull_request:
    paths-ignore:
      - "docs/*"
      - "third_party/*"
      - .gitignore
      - "*.md"
  workflow_dispatch:

jobs:
  build_on_cpu:
    strategy:
        matrix:
          include:
            - python-version: '3.7'
              python-tag: "py37"
            - python-version: '3.8'
              python-tag: "py38"
            - python-version: '3.9'
              python-tag: "py39"
            - python-version: '3.10'
              python-tag: "py310"
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      runner: linux.2xlarge
      timeout: 60
      gpu-arch-type: cuda
      gpu-arch-version: "11.7"
      upload-artifact: torchrec-test_${{ matrix.python-version }}_11.7.whl
      script: |
        set -x
        ldd --version
        conda create -y --name build_binary python=${{ matrix.python-version }}
        conda info
        conda activate build_binary
        conda install -y pytorch pytorch-cuda=11.7 -c pytorch-nightly -c nvidia
        python -m pip install -r requirements.txt
        python -c "import torch.distributed"
        echo "torch.distributed succeeded"
        python -c "import skbuild"
        echo "skbuild succeeded"
        python -c "import numpy"
        echo "numpy succeeded"
        python setup.py bdist_wheel \
          --package_name torchrec-test \
          --python-tag=${{ matrix.python-tag }} \
          --dist-dir=${RUNNER_ARTIFACT_DIR}
  test_on_gpu:
    needs: build_on_cpu
    strategy:
        matrix:
          python-version: ['3.7', '3.8', '3.9', '3.10']
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      runner: linux.4xlarge.nvidia.gpu
      timeout: 60
      gpu-arch-type: cuda
      gpu-arch-version: "11.7"
      download-artifact: torchrec-test_${{ matrix.python-version }}_11.7.whl
      script: |
        set -x
        ldd --version
        conda create -y --name build_binary python=${{ matrix.python-version }}
        conda info
        conda activate build_binary
        conda install -y pytorch pytorch-cuda=11.7 -c pytorch-nightly -c nvidia
        # Install torchrec binary
        pip install ${RUNNER_ARTIFACT_DIR}/*.whl
        pip uninstall --yes fbgemm_gpu
        pip install --no-input fbgemm_gpu_nightly
        conda install -y pytest
        python -m pytest torchrec -v -s -W ignore::pytest.PytestCollectionWarning --continue-on-collection-errors \
          -k "not test_load_state_dict and not test_kjt_bucketize_before_all2all and \
          not test_fuse_embedding_optimizer_replacement_cuda and not test_fuse_embedding_optimizer_replacement_cuda_uvm_caching and \
          not test_forward_with_state_dict and not test_optimizer_fusion and not test_quantized_comm_codec"
